.wrapper {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(15rem, 1fr));
	gap: 1em 1em;
	align-items: start;
}

@media print, (min-width: 65rem) {
	/* This layout is very hardcoded and may break if new hotkey group is added */
	.wrapper {
		grid-template-columns: repeat(4, 1fr);
		grid-template-rows: 1fr auto;
	}
	.relatedGroup {
		grid-row: 1 / 3;
	}
	.relatedGroup.is_columnPreferred {
		grid-row: 1;
		grid-column: var(--preferredColumn);
	}
	.relatedGroup.is_columnPreferred ~ .relatedGroup.is_columnPreferred {
		grid-row: 2;
	}
}

.item {
	display: grid;
	grid-template-columns: 2em 1fr;
	column-gap: 0.7em;
	align-items: baseline;
}

.symbol {
	display: inline-block;
	padding: 0 0.2em;
	min-width: 1.5em;
	text-align: center;
	position: relative;
	isolation: isolate;
}

.symbol::before {
	content: '';
	position: absolute;
	z-index: -1;
	inset: 0;
	border-radius: 0.2em;
	background-color: var(--color);
	-webkit-print-color-adjust: exact;
	print-color-adjust: exact;
}

@media print {
	.symbol::before {
		background-image: repeating-linear-gradient(
			var(--angle),
			var(--color),
			var(--color) 5px,
			color-mix(in srgb, var(--color) 90%, currentColor) 5px,
			color-mix(in srgb, var(--color) 90%, currentColor) 10px
		);
	}
}

.symbol.is_group_single {
	--color: var(--group-color-single);
	--angle: var(--group-angle-single);
}
.symbol.is_group_1 {
	--color: var(--group-color-1);
	--angle: var(--group-angle-1);
}
.symbol.is_group_2 {
	--color: var(--group-color-2);
	--angle: var(--group-angle-2);
}
.symbol.is_group_3 {
	--color: var(--group-color-3);
	--angle: var(--group-angle-3);
}

.text {
	line-height: 1.1;
}

.label {
}

.note {
	opacity: 0.8;
	font-size: 0.75rem;
}

.relatedGroup {
	display: grid;
}

.relatedGroup_hotkeys {
	display: grid;
	row-gap: 0.3em;
}
